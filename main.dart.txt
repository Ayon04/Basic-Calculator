import 'package:flutter/material.dart';



void main() {
  runApp(CalculatorApp());
}

class CalculatorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Calculator(),
    );
  }
}

class Calculator extends StatefulWidget {
  @override
  _CalculatorState createState() => _CalculatorState();
}

class _CalculatorState extends State<Calculator> {
  String expression = '';
  String result = '';
  bool isResultShown = false;

  void buttonPressed(String value) {
    setState(() {
      if (value == 'C') {
        expression = '';
        result = '';
        isResultShown = false;
      } else if (value == '=') {
        calculateResult();
      } else {
        if (isResultShown) {
          expression = '';
          isResultShown = false;
        }
        expression += value;
        result = expression;
      }
    });
  }

  void calculateResult() {
    try {
      double evalResult = _evaluateExpression(expression);
      setState(() {
        result = evalResult.toString();
        expression = result;
        isResultShown = true;
      });
    } catch (e) {
      setState(() {
        result = 'Error';
        expression = '';
      });
    }
  }

  double _evaluateExpression(String expr) {
    List<String> tokens = expr.split(RegExp(r'(?=[*/+-])|(?<=[*/+-])'));

    double total = double.parse(tokens[0]);
    String operator = '';

    for (int i = 1; i < tokens.length; i++) {
      if (tokens[i] == '+' || tokens[i] == '-' || tokens[i] == '*' || tokens[i] == '/') {
        operator = tokens[i];
      } else {
        double currentNum = double.parse(tokens[i]);
        switch (operator) {
          case '+':
            total += currentNum;
            break;
          case '-':
            total -= currentNum;
            break;
          case '*':
            total *= currentNum;
            break;
          case '/':
            total /= currentNum;
            break;
        }
      }
    }

    return total;
  }
  Widget calculatorButton(String value, {Color? textColor, Color? backgroundColor}) {
    return Expanded(
      child: Padding(
        padding: const EdgeInsets.all(8.0),
        child: ElevatedButton(
          onPressed: () => buttonPressed(value),
          style: ElevatedButton.styleFrom(
            padding: EdgeInsets.all(24),
            backgroundColor: backgroundColor ?? Colors.black54,
          ),
          child: Text(
            value,
            style: TextStyle(
              fontSize: 28,
              color: textColor ?? Colors.white,
              fontWeight: FontWeight.bold,
            ),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        title: Text('Calculator', style: TextStyle(fontSize: 28, color: Colors.white)),
        centerTitle: true,
        backgroundColor: Colors.black87,
      ),
      body: Column(
        children: <Widget>[
          Expanded(
            child: Container(
              padding: EdgeInsets.all(16),
              alignment: Alignment.bottomRight,
              child: Text(
                result,
                style: TextStyle(fontSize: 64, fontWeight: FontWeight.w200, color: Colors.white),
              ),
            ),
          ),
          Row(
            children: <Widget>[
              calculatorButton('C', textColor: Colors.black, backgroundColor: Colors.grey),
              calculatorButton('/', textColor: Colors.white, backgroundColor: Colors.orange),
              calculatorButton('*', textColor: Colors.white, backgroundColor: Colors.orange),
              calculatorButton('-', textColor: Colors.white, backgroundColor: Colors.orange),
            ],
          ),
          Row(
            children: <Widget>[
              calculatorButton('7'),
              calculatorButton('8'),
              calculatorButton('9'),
              calculatorButton('+', textColor: Colors.white, backgroundColor: Colors.orange),
            ],
          ),
          Row(
            children: <Widget>[
              calculatorButton('4'),
              calculatorButton('5'),
              calculatorButton('6'),
              calculatorButton('='),
            ],
          ),
          Row(
            children: <Widget>[
              calculatorButton('1'),
              calculatorButton('2'),
              calculatorButton('3'),
              calculatorButton('0', backgroundColor: Colors.black87),
            ],
          ),
        ],
      ),
    );
  }
}
